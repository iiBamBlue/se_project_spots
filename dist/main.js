!function(){"use strict";var e="";const t={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-button",inactiveButtonClass:"modal__submit-button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error"},r=e=>{console.error(`Validation Error: ${e}`)},o=(e,t,o)=>{const n=e.querySelector(`#${t.id}-error`);n?(n.textContent="",n.removeAttribute("role"),t.classList.remove(o.inputErrorClass)):r(`Error message element for input ${t.id} not found.`)},n=(e,t,r)=>{(e=>e.some((e=>!e.validity.valid)))(e)?a(t,r):(t.disabled=!1,t.classList.remove(r.inactiveButtonClass))},a=(e,t)=>{e.disabled=!0,e.classList.add(t.inactiveButtonClass)},l=(e,t,r)=>{t.forEach((t=>{o(e,t,r)}));const n=e.querySelector(r.submitButtonSelector);a(n,r)};function c(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Save",o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"Saving...";t.textContent=e?o:r}function s(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Saving...";t.preventDefault();const o=t.submitter,n=o.textContent;return c(!0,o,n,r),e().catch(console.error).finally((()=>{c(!1,o,n)}))}var i=e+"5e2464bff616faf70484.svg",d=e+"2fc47fd8e9a9bcd9612f.jpg",u=e+"49e44e5e03758262e8bf.svg",m=e+"975792ea68af0a3c209d.svg",_=e+"c81b22e9874268723f8d.svg";document.querySelector(".header__logo").src=i,document.querySelector(".profile__avatar").src=d,document.querySelector(".profile__edit-button img").src=u,document.querySelector(".profile__add-button img").src=m,document.querySelector(".profile__pencilIcon").src=_;const v=new class{constructor(e){this._baseUrl=e.baseUrl,this._headers=e.headers}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}_request(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const r={headers:this._headers,...t},o=`${this._baseUrl}${e}`;return fetch(o,r).then(this._checkResponse)}getUserInfo(){return this._request("/users/me")}getInitialCards(){return this._request("/cards",{method:"GET"})}editUserInfo(e){let{name:t,about:r}=e;return this._request("/users/me",{method:"PATCH",body:JSON.stringify({name:t,about:r})})}updateAvatar(e){let{avatar:t}=e;return this._request("/users/me/avatar",{method:"PATCH",body:JSON.stringify({avatar:t})})}addCard(e){let{name:t,link:r}=e;return this._request("/cards",{method:"POST",body:JSON.stringify({name:t,link:r})})}removeCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}likeCard(e){return this._request(`/cards/${e}/likes`,{method:"PUT"})}dislikeCard(e){return this._request(`/cards/${e}/likes`,{method:"DELETE"})}fetchInitialData(){return Promise.all([this.getUserInfo(),this.getInitialCards()])}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"f1f1dbab-8e17-48d3-a098-d77dfd6ea3c5","Content-Type":"application/json"}});let f;v.getUserInfo().then((e=>(f=e._id,p.textContent=e.name,S.textContent=e.about,D.src=e.avatar,v.getInitialCards()))).then((e=>{e.forEach((e=>{const t=H(e);R.append(t)}))})).catch(console.error);const y=document.querySelector(".profile__edit-button"),h=document.querySelector(".profile__add-button"),p=document.querySelector(".profile__name"),S=document.querySelector(".profile__description"),q=document.querySelectorAll(".modal__close-button"),b=document.querySelector("#delete-modal"),k=b.querySelector("#delete-form"),E=b.querySelector(".modal__cancel-button"),C=document.querySelector(".profile__avatar-button"),g=document.querySelector("#new-avatar-modal"),L=g.querySelector(".modal__form"),x=g.querySelector("#new-avatar-link-input"),D=document.querySelector(".profile__avatar"),A=document.querySelector("#edit-modal"),$=A.querySelector(".modal__form"),T=A.querySelector("#profile-name-input"),U=A.querySelector("#profile-description-input"),I=document.querySelector("#new-card-modal"),w=I.querySelector(".modal__form"),P=I.querySelector("#new-card-link-input"),B=I.querySelector("#new-card-caption-input"),O=document.querySelector("#preview-modal"),j=O.querySelector(".modal__image"),N=O.querySelector(".modal__caption"),J=document.querySelector("#card-template"),R=document.querySelector(".cards__list");function H(e){const t=J.content.querySelector(".card").cloneNode(!0);t._id=e._id;const r=t.querySelector(".card__title"),o=t.querySelector(".card__image"),n=t.querySelector(".card__like-button"),a=t.querySelector(".card__like-count"),l=t.querySelector(".card__delete-button");return r.textContent=e.name,o.src=e.link,o.alt=e.name,e.isLiked?(n.classList.add("card__like-button_liked"),a.textContent="1"):a.textContent="0",n.addEventListener("click",(()=>{(n.classList.contains("card__like-button_liked")?v.dislikeCard(e._id):v.likeCard(e._id)).then((e=>{n.classList.toggle("card__like-button_liked",e.isLiked),a.textContent=e.isLiked?"1":"0"})).catch((e=>{console.error("Error updating like status:",e)}))})),l.addEventListener("click",(()=>{K(b),k._cardToDelete=t})),o.addEventListener("click",(()=>{K(O),N.textContent=e.name,j.alt=e.name,j.src=e.link})),t}function K(e){function t(t){t.target.classList.contains("modal_opened")&&z(e)}function r(t){"Escape"===t.key&&z(e)}e.classList.add("modal_opened"),document.addEventListener("click",t),document.addEventListener("keydown",r),e._handleOverlayClick=t,e._handleEscapeKeyPress=r}function z(e){e.classList.remove("modal_opened"),document.removeEventListener("click",e._handleOverlayClick),document.removeEventListener("keydown",e._handleEscapeKeyPress)}function G(){const e=T.value,t=U.value;return v.editUserInfo({name:e,about:t}).then((e=>{p.textContent=e.name,S.textContent=e.about,z(A)}))}var M;q.forEach((e=>{const t=e.closest(".modal");e.addEventListener("click",(()=>z(t)))})),y.addEventListener("click",(()=>{T.value=p.textContent,U.value=S.textContent,l($,[T,U],t),K(A)})),C.addEventListener("click",(()=>{K(g)})),h.addEventListener("click",(()=>{K(I)})),E.addEventListener("click",(()=>{z(b)})),$.addEventListener("submit",(function(e){s(G,e,"Saving...")})),w.addEventListener("submit",(function(e){e.preventDefault();const t=w.querySelector(".modal__submit-button");c(!0,t),v.addCard({name:B.value,link:P.value}).then((t=>{const r=H(t);R.prepend(r),e.target.reset(),z(I)})).catch(console.error).finally((()=>{c(!1,t)}))})),k.addEventListener("submit",(e=>{e.preventDefault();const t=k.querySelector(".modal__submit-button");c(!0,t,"Delete","Deleting..."),v.removeCard(k._cardToDelete._id).then((()=>{s((()=>{k._cardToDelete.remove()})),z(b)})).catch(console.error).finally((()=>{c(!1,t,"Delete")}))})),L.addEventListener("submit",(e=>{e.preventDefault();const t=L.querySelector(".modal__submit-button");c(!0,t),v.updateAvatar({avatar:x.value}).then((t=>{D.src=t.avatar,e.target.reset(),z(g)})).catch(console.error).finally((()=>{c(!1,t)}))})),M=t,document.querySelectorAll(M.formSelector).forEach((e=>{const t=Array.from(e.querySelectorAll(M.inputSelector));((e,t)=>{const a=Array.from(e.querySelectorAll(t.inputSelector)),l=e.querySelector(t.submitButtonSelector);n(a,l,t),a.forEach((c=>{c.addEventListener("input",(()=>{((e,t,n)=>{t.validity.valid?o(e,t,n):((e,t,o,n)=>{const a=e.querySelector(`#${t.id}-error`);a?(a.textContent=o,a.setAttribute("role","alert"),t.classList.add(n.inputErrorClass)):r(`Error message element for input ${t.id} not found.`)})(e,t,t.validationMessage,n)})(e,c,t),n(a,l,t)}))}))})(e,M),e.addEventListener("reset",(()=>{l(e,t,M)}))}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoieUJBQ0EsSUFBSUEsRUNEb0IsR0NBakIsTUFBTUMsRUFBVyxDQUN0QkMsYUFBYyxlQUNkQyxjQUFlLGdCQUNmQyxxQkFBc0Isd0JBQ3RCQyxvQkFBcUIsZ0NBQ3JCQyxnQkFBaUIsMEJBQ2pCQyxXQUFZLGdCQUlSQyxFQUFZQyxJQUNoQkMsUUFBUUMsTUFBTSxxQkFBcUJGLElBQVUsRUFvQnpDRyxFQUFpQkEsQ0FBQ0MsRUFBYUMsRUFBY0MsS0FDakQsTUFBTUMsRUFBc0JILEVBQVlJLGNBQ3RDLElBQUlILEVBQWFJLFlBR2RGLEdBS0xBLEVBQW9CRyxZQUFjLEdBQ2xDSCxFQUFvQkksZ0JBQWdCLFFBQ3BDTixFQUFhTyxVQUFVQyxPQUFPUCxFQUFPVCxrQkFObkNFLEVBQVMsbUNBQW1DTSxFQUFhSSxnQkFNTixFQXVCakRLLEVBQW9CQSxDQUFDQyxFQUFXQyxFQUFlVixLQUw1QlMsSUFDaEJBLEVBQVVFLE1BQU1DLElBQVdBLEVBQU1DLFNBQVNDLFFBSzdDQyxDQUFnQk4sR0FDbEJPLEVBQWNOLEVBQWVWLElBRTdCVSxFQUFjTyxVQUFXLEVBQ3pCUCxFQUFjSixVQUFVQyxPQUFPUCxFQUFPVixxQkFDeEMsRUFJSTBCLEVBQWdCQSxDQUFDTixFQUFlVixLQUNwQ1UsRUFBY08sVUFBVyxFQUN6QlAsRUFBY0osVUFBVVksSUFBSWxCLEVBQU9WLG9CQUFvQixFQUk1QzZCLEVBQWtCQSxDQUFDckIsRUFBYVcsRUFBV1QsS0FDdERTLEVBQVVXLFNBQVNSLElBQ2pCZixFQUFlQyxFQUFhYyxFQUFPWixFQUFPLElBRzVDLE1BQU1VLEVBQWdCWixFQUFZSSxjQUFjRixFQUFPWCxzQkFDdkQyQixFQUFjTixFQUFlVixFQUFPLEVDeEYvQixTQUFTcUIsRUFDZEMsRUFDQUMsR0FHQSxJQUZBQyxFQUFVQyxVQUFBQyxPQUFBLFFBQUFDLElBQUFGLFVBQUEsR0FBQUEsVUFBQSxHQUFHLE9BQ2JHLEVBQVdILFVBQUFDLE9BQUEsUUFBQUMsSUFBQUYsVUFBQSxHQUFBQSxVQUFBLEdBQUcsWUFHWkYsRUFBT25CLFlBRExrQixFQUNtQk0sRUFFQUosQ0FFekIsQ0FFTyxTQUFTSyxFQUFhQyxFQUFTQyxHQUFnQyxJQUEzQkgsRUFBV0gsVUFBQUMsT0FBQSxRQUFBQyxJQUFBRixVQUFBLEdBQUFBLFVBQUEsR0FBRyxZQUN2RE0sRUFBSUMsaUJBQ0osTUFBTUMsRUFBZUYsRUFBSUcsVUFDbkJDLEVBQWNGLEVBQWE3QixZQUlqQyxPQUZBaUIsR0FBYyxFQUFNWSxFQUFjRSxFQUFhUCxHQUV4Q0UsSUFDSk0sTUFBTXpDLFFBQVFDLE9BQ2R5QyxTQUFRLEtBQ1BoQixHQUFjLEVBQU9ZLEVBQWNFLEVBQVksR0FFckQsQywrSkNUQUcsU0FBU3BDLGNBQWMsaUJBQWlCcUMsSUFBTUMsRUFDOUNGLFNBQVNwQyxjQUFjLG9CQUFvQnFDLElBQU1FLEVBQ2pESCxTQUFTcEMsY0FBYyw2QkFBNkJxQyxJQUFNRyxFQUMxREosU0FBU3BDLGNBQWMsNEJBQTRCcUMsSUFBTUksRUFDekRMLFNBQVNwQyxjQUFjLHdCQUF3QnFDLElBQU1LLEVBRXJELE1BQU1DLEVBQU0sSUN0QlosTUFDRUMsV0FBQUEsQ0FBWUMsR0FDVkMsS0FBS0MsU0FBV0YsRUFBUUcsUUFDeEJGLEtBQUtHLFNBQVdKLEVBQVFLLE9BQzFCLENBRUFDLGNBQUFBLENBQWVDLEdBQ2IsT0FBSUEsRUFBSUMsR0FDQ0QsRUFBSUUsT0FFTkMsUUFBUUMsT0FBTyxVQUFVSixFQUFJSyxTQUN0QyxDQUVBQyxRQUFBQSxDQUFTQyxHQUF3QixJQUFkZCxFQUFPdEIsVUFBQUMsT0FBQSxRQUFBQyxJQUFBRixVQUFBLEdBQUFBLFVBQUEsR0FBRyxDQUFDLEVBQzVCLE1BQU1xQyxFQUFlLENBQ25CVixRQUFTSixLQUFLRyxZQUNYSixHQUVDZ0IsRUFBTSxHQUFHZixLQUFLQyxXQUFXWSxJQUMvQixPQUFPRyxNQUFNRCxFQUFLRCxHQUFjRyxLQUFLakIsS0FBS0ssZUFDNUMsQ0FFQWEsV0FBQUEsR0FDRSxPQUFPbEIsS0FBS1ksU0FBUyxZQUN2QixDQUVBTyxlQUFBQSxHQUNFLE9BQU9uQixLQUFLWSxTQUFTLFNBQVUsQ0FDN0JRLE9BQVEsT0FFWixDQUdBQyxZQUFBQSxDQUFZQyxHQUFrQixJQUFqQixLQUFFQyxFQUFJLE1BQUVDLEdBQU9GLEVBQzFCLE9BQU90QixLQUFLWSxTQUFTLFlBQWEsQ0FDaENRLE9BQVEsUUFDUkssS0FBTUMsS0FBS0MsVUFBVSxDQUFFSixPQUFNQyxXQUVqQyxDQUdBSSxZQUFBQSxDQUFZQyxHQUFhLElBQVosT0FBRUMsR0FBUUQsRUFDckIsT0FBTzdCLEtBQUtZLFNBQVMsbUJBQW9CLENBQ3ZDUSxPQUFRLFFBQ1JLLEtBQU1DLEtBQUtDLFVBQVUsQ0FBRUcsWUFFM0IsQ0FHQUMsT0FBQUEsQ0FBT0MsR0FBaUIsSUFBaEIsS0FBRVQsRUFBSSxLQUFFVSxHQUFNRCxFQUNwQixPQUFPaEMsS0FBS1ksU0FBUyxTQUFVLENBQzdCUSxPQUFRLE9BQ1JLLEtBQU1DLEtBQUtDLFVBQVUsQ0FBRUosT0FBTVUsVUFFakMsQ0FHQUMsVUFBQUEsQ0FBV0MsR0FDVCxPQUFPbkIsTUFBTSxHQUFHaEIsS0FBS0Msa0JBQWtCa0MsSUFBVSxDQUMvQ2YsT0FBUSxTQUNSaEIsUUFBU0osS0FBS0csV0FDYmMsS0FBS2pCLEtBQUtLLGVBQ2YsQ0FHQStCLFFBQUFBLENBQVNELEdBQ1AsT0FBT25DLEtBQUtZLFNBQVMsVUFBVXVCLFVBQWdCLENBQzdDZixPQUFRLE9BRVosQ0FHQWlCLFdBQUFBLENBQVlGLEdBQ1YsT0FBT25DLEtBQUtZLFNBQVMsVUFBVXVCLFVBQWdCLENBQzdDZixPQUFRLFVBRVosQ0FHQWtCLGdCQUFBQSxHQUNFLE9BQU83QixRQUFROEIsSUFBSSxDQUFDdkMsS0FBS2tCLGNBQWVsQixLQUFLbUIsbUJBQy9DLEdEM0RrQixDQUNsQmpCLFFBQVMsa0RBQ1RFLFFBQVMsQ0FDUG9DLGNBQWUsdUNBQ2YsZUFBZ0Isc0JBSXBCLElBQUlDLEVBRUo1QyxFQUNHcUIsY0FDQUQsTUFBTXlCLElBQ0xELEVBQVNDLEVBQVNDLElBQ2xCQyxFQUFZeEYsWUFBY3NGLEVBQVNuQixLQUNuQ3NCLEVBQW1CekYsWUFBY3NGLEVBQVNsQixNQUMxQ3NCLEVBQWN2RCxJQUFNbUQsRUFBU1osT0FDdEJqQyxFQUFJc0IscUJBRVpGLE1BQU04QixJQUNMQSxFQUFNM0UsU0FBUzRFLElBQ2IsTUFBTUMsRUFBY0MsRUFBZUYsR0FDbkNHLEVBQVVDLE9BQU9ILEVBQVksR0FDN0IsSUFFSDdELE1BQU16QyxRQUFRQyxPQUdqQixNQUFNeUcsRUFBa0IvRCxTQUFTcEMsY0FBYyx5QkFDekNvRyxFQUFrQmhFLFNBQVNwQyxjQUFjLHdCQUN6QzBGLEVBQWN0RCxTQUFTcEMsY0FBYyxrQkFDckMyRixFQUFxQnZELFNBQVNwQyxjQUFjLHlCQUk1Q3FHLEVBQWVqRSxTQUFTa0UsaUJBQWlCLHdCQUN6Q0MsRUFBY25FLFNBQVNwQyxjQUFjLGlCQUNyQ3dHLEVBQWFELEVBQVl2RyxjQUFjLGdCQUN2Q3lHLEVBQXFCRixFQUFZdkcsY0FBYyx5QkFDL0MwRyxFQUFtQnRFLFNBQVNwQyxjQUFjLDJCQUMxQzJHLEVBQWN2RSxTQUFTcEMsY0FBYyxxQkFDckM0RyxFQUFhRCxFQUFZM0csY0FBYyxnQkFDdkM2RyxFQUFrQkYsRUFBWTNHLGNBQWMsMEJBQzVDNEYsRUFBZ0J4RCxTQUFTcEMsY0FBYyxvQkFHdkM4RyxFQUFZMUUsU0FBU3BDLGNBQWMsZUFDbkMrRyxFQUFXRCxFQUFVOUcsY0FBYyxnQkFDbkNnSCxFQUFxQkYsRUFBVTlHLGNBQWMsdUJBQzdDaUgsRUFBNEJILEVBQVU5RyxjQUMxQyw4QkFJSWtILEVBQVk5RSxTQUFTcEMsY0FBYyxtQkFDbkNtSCxFQUFXRCxFQUFVbEgsY0FBYyxnQkFFbkNvSCxFQUFnQkYsRUFBVWxILGNBQWMsd0JBQ3hDcUgsRUFBbUJILEVBQVVsSCxjQUFjLDJCQUczQ3NILEVBQWVsRixTQUFTcEMsY0FBYyxrQkFDdEN1SCxFQUFlRCxFQUFhdEgsY0FBYyxpQkFDMUN3SCxFQUFpQkYsRUFBYXRILGNBQWMsbUJBRzVDeUgsRUFBZXJGLFNBQVNwQyxjQUFjLGtCQUN0Q2lHLEVBQVk3RCxTQUFTcEMsY0FBYyxnQkFFekMsU0FBU2dHLEVBQWUwQixHQUN0QixNQUFNM0IsRUFBYzBCLEVBQWFFLFFBQzlCM0gsY0FBYyxTQUNkNEgsV0FBVSxHQUNiN0IsRUFBWU4sSUFBTWlDLEVBQUtqQyxJQUV2QixNQUFNb0MsRUFBWTlCLEVBQVkvRixjQUFjLGdCQUN0QzhILEVBQVkvQixFQUFZL0YsY0FBYyxnQkFDdEMrSCxFQUFpQmhDLEVBQVkvRixjQUFjLHNCQUMzQ2dJLEVBQWdCakMsRUFBWS9GLGNBQWMscUJBQzFDaUksRUFBbUJsQyxFQUFZL0YsY0FBYyx3QkFrRG5ELE9BL0NBNkgsRUFBVTNILFlBQWN3SCxFQUFLckQsS0FDN0J5RCxFQUFVekYsSUFBTXFGLEVBQUszQyxLQUNyQitDLEVBQVVJLElBQU1SLEVBQUtyRCxLQUdqQnFELEVBQUtTLFNBQ1BKLEVBQWUzSCxVQUFVWSxJQUFJLDJCQUM3QmdILEVBQWM5SCxZQUFjLEtBRTVCOEgsRUFBYzlILFlBQWMsSUFHOUI2SCxFQUFlSyxpQkFBaUIsU0FBUyxNQUNkTCxFQUFlM0gsVUFBVWlJLFNBQ2hELDJCQUlFMUYsRUFBSXdDLFlBQVl1QyxFQUFLakMsS0FDckI5QyxFQUFJdUMsU0FBU3dDLEVBQUtqQyxNQUduQjFCLE1BQU11RSxJQUNMUCxFQUFlM0gsVUFBVW1JLE9BQ3ZCLDBCQUNBRCxFQUFZSCxTQUVkSCxFQUFjOUgsWUFBY29JLEVBQVlILFFBQVUsSUFBTSxHQUFHLElBRTVEakcsT0FBT3hDLElBQ05ELFFBQVFDLE1BQU0sOEJBQStCQSxFQUFNLEdBQ25ELElBSU51SSxFQUFpQkcsaUJBQWlCLFNBQVMsS0FDekNJLEVBQVVqQyxHQUNWQyxFQUFXaUMsY0FBZ0IxQyxDQUFXLElBR3hDK0IsRUFBVU0saUJBQWlCLFNBQVMsS0FDbENJLEVBQVVsQixHQUNWRSxFQUFldEgsWUFBY3dILEVBQUtyRCxLQUNsQ2tELEVBQWFXLElBQU1SLEVBQUtyRCxLQUN4QmtELEVBQWFsRixJQUFNcUYsRUFBSzNDLElBQUksSUFHdkJnQixDQUNULENBRUEsU0FBU3lDLEVBQVVFLEdBU2pCLFNBQVNDLEVBQW1CQyxHQUN0QkEsRUFBTUMsT0FBT3pJLFVBQVVpSSxTQUFTLGlCQUNsQ1MsRUFBV0osRUFFZixDQUVBLFNBQVNLLEVBQXFCSCxHQUNWLFdBQWRBLEVBQU1JLEtBQ1JGLEVBQVdKLEVBRWYsQ0FsQkFBLEVBQU10SSxVQUFVWSxJQUFJLGdCQUVwQm9CLFNBQVNnRyxpQkFBaUIsUUFBU08sR0FDbkN2RyxTQUFTZ0csaUJBQWlCLFVBQVdXLEdBRXJDTCxFQUFNTyxvQkFBc0JOLEVBQzVCRCxFQUFNUSxzQkFBd0JILENBYWhDLENBRUEsU0FBU0QsRUFBV0osR0FDbEJBLEVBQU10SSxVQUFVQyxPQUFPLGdCQUV2QitCLFNBQVMrRyxvQkFBb0IsUUFBU1QsRUFBTU8scUJBQzVDN0csU0FBUytHLG9CQUFvQixVQUFXVCxFQUFNUSxzQkFDaEQsQ0FrQkEsU0FBU0UsSUFFUCxNQUFNL0UsRUFBTzJDLEVBQW1CcUMsTUFDMUIvRSxFQUFRMkMsRUFBMEJvQyxNQUd4QyxPQUFPMUcsRUFBSXdCLGFBQWEsQ0FBRUUsT0FBTUMsVUFBU1AsTUFBTXlCLElBRTdDRSxFQUFZeEYsWUFBY3NGLEVBQVNuQixLQUNuQ3NCLEVBQW1CekYsWUFBY3NGLEVBQVNsQixNQUUxQ3dFLEVBQVdoQyxFQUFVLEdBRXpCLENGdkdpQ2hILE1Fb0ZqQ3VHLEVBQWFuRixTQUFTRyxJQUNwQixNQUFNcUgsRUFBUXJILEVBQU9pSSxRQUFRLFVBQzdCakksRUFBTytHLGlCQUFpQixTQUFTLElBQU1VLEVBQVdKLElBQU8sSUE4QzNEdkMsRUFBZ0JpQyxpQkFBaUIsU0FBUyxLQUN4Q3BCLEVBQW1CcUMsTUFBUTNELEVBQVl4RixZQUN2QytHLEVBQTBCb0MsTUFBUTFELEVBQW1CekYsWUFDckRlLEVBQ0U4RixFQUNBLENBQUNDLEVBQW9CQyxHQUNyQmpJLEdBRUZ3SixFQUFVMUIsRUFBVSxJQUl0QkosRUFBaUIwQixpQkFBaUIsU0FBUyxLQUN6Q0ksRUFBVTdCLEVBQVksSUFJeEJQLEVBQWdCZ0MsaUJBQWlCLFNBQVMsS0FDeENJLEVBQVV0QixFQUFVLElBR3RCVCxFQUFtQjJCLGlCQUFpQixTQUFTLEtBQzNDVSxFQUFXdkMsRUFBWSxJQUl6QlEsRUFBU3FCLGlCQUFpQixVQXJEMUIsU0FBOEJ2RyxHQUM1QkYsRUFBYXlILEVBQXdCdkgsRUFBSyxZQUM1QyxJQW9EQXNGLEVBQVNpQixpQkFBaUIsVUFsRDFCLFNBQThCdkcsR0FDNUJBLEVBQUlDLGlCQUNKLE1BQU1DLEVBQWVvRixFQUFTbkgsY0FBYyx5QkFDNUNtQixHQUFjLEVBQU1ZLEdBRXBCWSxFQUNHa0MsUUFBUSxDQUNQUixLQUFNZ0QsRUFBaUJnQyxNQUN2QnRFLEtBQU1xQyxFQUFjaUMsUUFFckJ0RixNQUFNd0YsSUFDTCxNQUFNeEQsRUFBY0MsRUFBZXVELEdBQ25DdEQsRUFBVXVELFFBQVF6RCxHQUNsQmxFLEVBQUlnSCxPQUFPWSxRQUNYWCxFQUFXNUIsRUFBVSxJQUV0QmhGLE1BQU16QyxRQUFRQyxPQUNkeUMsU0FBUSxLQUNQaEIsR0FBYyxFQUFPWSxFQUFhLEdBRXhDLElBZ0NBeUUsRUFBVzRCLGlCQUFpQixVQUFXdkcsSUFDckNBLEVBQUlDLGlCQUNKLE1BQU1DLEVBQWV5RSxFQUFXeEcsY0FBYyx5QkFDOUNtQixHQUFjLEVBQU1ZLEVBQWMsU0FBVSxlQUU1Q1ksRUFDR3FDLFdBQVd3QixFQUFXaUMsY0FBY2hELEtBQ3BDMUIsTUFBSyxLQUNKcEMsR0FBYSxLQUNYNkUsRUFBV2lDLGNBQWNwSSxRQUFRLElBRW5DeUksRUFBV3ZDLEVBQVksSUFFeEJyRSxNQUFNekMsUUFBUUMsT0FDZHlDLFNBQVEsS0FDUGhCLEdBQWMsRUFBT1ksRUFBYyxTQUFTLEdBQzVDLElBSU42RSxFQUFXd0IsaUJBQWlCLFVBQVd2RyxJQUNyQ0EsRUFBSUMsaUJBQ0osTUFBTUMsRUFBZTZFLEVBQVc1RyxjQUFjLHlCQUM5Q21CLEdBQWMsRUFBTVksR0FFcEJZLEVBQ0crQixhQUFhLENBQ1pFLE9BQVFpQyxFQUFnQndDLFFBRXpCdEYsTUFBTXlCLElBQ0xJLEVBQWN2RCxJQUFNbUQsRUFBU1osT0FDN0IvQyxFQUFJZ0gsT0FBT1ksUUFDWFgsRUFBV25DLEVBQVksSUFFeEJ6RSxNQUFNekMsUUFBUUMsT0FDZHlDLFNBQVEsS0FDUGhCLEdBQWMsRUFBT1ksRUFBYSxHQUNsQyxJRnRNMkJqQyxFRXlNaEJkLEVGeE1Fb0QsU0FBU2tFLGlCQUFpQnhHLEVBQU9iLGNBRXpDaUMsU0FBU3RCLElBQ2hCLE1BQU1XLEVBQVltSixNQUFNQyxLQUN0Qi9KLEVBQVkwRyxpQkFBaUJ4RyxFQUFPWixnQkF0QmhCMEssRUFBQ2hLLEVBQWFFLEtBQ3RDLE1BQU1TLEVBQVltSixNQUFNQyxLQUN0Qi9KLEVBQVkwRyxpQkFBaUJ4RyxFQUFPWixnQkFFaENzQixFQUFnQlosRUFBWUksY0FBY0YsRUFBT1gsc0JBRXZEbUIsRUFBa0JDLEVBQVdDLEVBQWVWLEdBRTVDUyxFQUFVVyxTQUFTckIsSUFDakJBLEVBQWF1SSxpQkFBaUIsU0FBUyxLQXREaEJ5QixFQUFDakssRUFBYUMsRUFBY0MsS0FDaERELEVBQWFjLFNBQVNDLE1BUXpCakIsRUFBZUMsRUFBYUMsRUFBY0MsR0F6Q3ZCZ0ssRUFBQ2xLLEVBQWFDLEVBQWNrSyxFQUFjakssS0FDL0QsTUFBTUMsRUFBc0JILEVBQVlJLGNBQ3RDLElBQUlILEVBQWFJLFlBR2RGLEdBS0xBLEVBQW9CRyxZQUFjNkosRUFDbENoSyxFQUFvQmlLLGFBQWEsT0FBUSxTQUN6Q25LLEVBQWFPLFVBQVVZLElBQUlsQixFQUFPVCxrQkFOaENFLEVBQVMsbUNBQW1DTSxFQUFhSSxnQkFNVCxFQXNCaEQ2SixDQUNFbEssRUFDQUMsRUFDQUEsRUFBYW9LLGtCQUNibkssRUFJSixFQTZDSStKLENBQW1CakssRUFBYUMsRUFBY0MsR0FDOUNRLEVBQWtCQyxFQUFXQyxFQUFlVixFQUFPLEdBQ25ELEdBQ0YsRUFXQThKLENBQWtCaEssRUFBYUUsR0FHL0JGLEVBQVl3SSxpQkFBaUIsU0FBUyxLQUNwQ25ILEVBQWdCckIsRUFBYVcsRUFBV1QsRUFBTyxHQUMvQyxHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9zcG90cy93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X3Nwb3RzL3dlYnBhY2svcnVudGltZS9wdWJsaWNQYXRoIiwid2VicGFjazovL3NlX3Byb2plY3Rfc3BvdHMvLi9zcmMvc2NyaXB0cy92YWxpZGF0aW9uLmpzIiwid2VicGFjazovL3NlX3Byb2plY3Rfc3BvdHMvLi9zcmMvdXRpbHMvdXRpbHMuanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9zcG90cy8uL3NyYy9wYWdlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X3Nwb3RzLy4vc3JjL3V0aWxzL0FwaS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGUgcmVxdWlyZSBzY29wZVxudmFyIF9fd2VicGFja19yZXF1aXJlX18gPSB7fTtcblxuIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjsiLCJleHBvcnQgY29uc3Qgc2V0dGluZ3MgPSB7XHJcbiAgZm9ybVNlbGVjdG9yOiBcIi5tb2RhbF9fZm9ybVwiLFxyXG4gIGlucHV0U2VsZWN0b3I6IFwiLm1vZGFsX19pbnB1dFwiLFxyXG4gIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiBcIi5tb2RhbF9fc3VibWl0LWJ1dHRvblwiLFxyXG4gIGluYWN0aXZlQnV0dG9uQ2xhc3M6IFwibW9kYWxfX3N1Ym1pdC1idXR0b25fZGlzYWJsZWRcIixcclxuICBpbnB1dEVycm9yQ2xhc3M6IFwibW9kYWxfX2lucHV0X3R5cGVfZXJyb3JcIixcclxuICBlcnJvckNsYXNzOiBcIm1vZGFsX19lcnJvclwiLFxyXG59O1xyXG5cclxuLy8gVXRpbGl0eSBmb3IgbG9nZ2luZyBlcnJvcnNcclxuY29uc3QgbG9nRXJyb3IgPSAobWVzc2FnZSkgPT4ge1xyXG4gIGNvbnNvbGUuZXJyb3IoYFZhbGlkYXRpb24gRXJyb3I6ICR7bWVzc2FnZX1gKTtcclxufTtcclxuXHJcbi8vIFNob3cgaW5wdXQgZXJyb3IgbWVzc2FnZVxyXG5jb25zdCBzaG93SW5wdXRFcnJvciA9IChmb3JtRWxlbWVudCwgaW5wdXRFbGVtZW50LCBlcnJvck1lc3NhZ2UsIGNvbmZpZykgPT4ge1xyXG4gIGNvbnN0IGVycm9yTWVzc2FnZUVsZW1lbnQgPSBmb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgYCMke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgXHJcbiAgKTtcclxuXHJcbiAgaWYgKCFlcnJvck1lc3NhZ2VFbGVtZW50KSB7XHJcbiAgICBsb2dFcnJvcihgRXJyb3IgbWVzc2FnZSBlbGVtZW50IGZvciBpbnB1dCAke2lucHV0RWxlbWVudC5pZH0gbm90IGZvdW5kLmApO1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgZXJyb3JNZXNzYWdlRWxlbWVudC50ZXh0Q29udGVudCA9IGVycm9yTWVzc2FnZTtcclxuICBlcnJvck1lc3NhZ2VFbGVtZW50LnNldEF0dHJpYnV0ZShcInJvbGVcIiwgXCJhbGVydFwiKTsgLy8gQWNjZXNzaWJpbGl0eSBlbmhhbmNlbWVudFxyXG4gIGlucHV0RWxlbWVudC5jbGFzc0xpc3QuYWRkKGNvbmZpZy5pbnB1dEVycm9yQ2xhc3MpO1xyXG59O1xyXG5cclxuLy8gSGlkZSBpbnB1dCBlcnJvciBtZXNzYWdlXHJcbmNvbnN0IGhpZGVJbnB1dEVycm9yID0gKGZvcm1FbGVtZW50LCBpbnB1dEVsZW1lbnQsIGNvbmZpZykgPT4ge1xyXG4gIGNvbnN0IGVycm9yTWVzc2FnZUVsZW1lbnQgPSBmb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgYCMke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgXHJcbiAgKTtcclxuXHJcbiAgaWYgKCFlcnJvck1lc3NhZ2VFbGVtZW50KSB7XHJcbiAgICBsb2dFcnJvcihgRXJyb3IgbWVzc2FnZSBlbGVtZW50IGZvciBpbnB1dCAke2lucHV0RWxlbWVudC5pZH0gbm90IGZvdW5kLmApO1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgZXJyb3JNZXNzYWdlRWxlbWVudC50ZXh0Q29udGVudCA9IFwiXCI7XHJcbiAgZXJyb3JNZXNzYWdlRWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoXCJyb2xlXCIpO1xyXG4gIGlucHV0RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKGNvbmZpZy5pbnB1dEVycm9yQ2xhc3MpO1xyXG59O1xyXG5cclxuLy8gQ2hlY2sgaW5wdXQgdmFsaWRpdHlcclxuY29uc3QgY2hlY2tJbnB1dFZhbGlkaXR5ID0gKGZvcm1FbGVtZW50LCBpbnB1dEVsZW1lbnQsIGNvbmZpZykgPT4ge1xyXG4gIGlmICghaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkKSB7XHJcbiAgICBzaG93SW5wdXRFcnJvcihcclxuICAgICAgZm9ybUVsZW1lbnQsXHJcbiAgICAgIGlucHV0RWxlbWVudCxcclxuICAgICAgaW5wdXRFbGVtZW50LnZhbGlkYXRpb25NZXNzYWdlLFxyXG4gICAgICBjb25maWdcclxuICAgICk7XHJcbiAgfSBlbHNlIHtcclxuICAgIGhpZGVJbnB1dEVycm9yKGZvcm1FbGVtZW50LCBpbnB1dEVsZW1lbnQsIGNvbmZpZyk7XHJcbiAgfVxyXG59O1xyXG5cclxuLy8gQ2hlY2sgaWYgZm9ybSBoYXMgaW52YWxpZCBpbnB1dFxyXG5jb25zdCBoYXNJbnZhbGlkSW5wdXQgPSAoaW5wdXRMaXN0KSA9PiB7XHJcbiAgcmV0dXJuIGlucHV0TGlzdC5zb21lKChpbnB1dCkgPT4gIWlucHV0LnZhbGlkaXR5LnZhbGlkKTtcclxufTtcclxuXHJcbi8vIFRvZ2dsZSBidXR0b24gc3RhdGVcclxuY29uc3QgdG9nZ2xlQnV0dG9uU3RhdGUgPSAoaW5wdXRMaXN0LCBidXR0b25FbGVtZW50LCBjb25maWcpID0+IHtcclxuICBpZiAoaGFzSW52YWxpZElucHV0KGlucHV0TGlzdCkpIHtcclxuICAgIGRpc2FibGVCdXR0b24oYnV0dG9uRWxlbWVudCwgY29uZmlnKTtcclxuICB9IGVsc2Uge1xyXG4gICAgYnV0dG9uRWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKGNvbmZpZy5pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICB9XHJcbn07XHJcblxyXG4vLyBEaXNhYmxlIGJ1dHRvblxyXG5jb25zdCBkaXNhYmxlQnV0dG9uID0gKGJ1dHRvbkVsZW1lbnQsIGNvbmZpZykgPT4ge1xyXG4gIGJ1dHRvbkVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlO1xyXG4gIGJ1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LmFkZChjb25maWcuaW5hY3RpdmVCdXR0b25DbGFzcyk7XHJcbn07XHJcblxyXG4vLyBSZXNldCB2YWxpZGF0aW9uXHJcbmV4cG9ydCBjb25zdCByZXNldFZhbGlkYXRpb24gPSAoZm9ybUVsZW1lbnQsIGlucHV0TGlzdCwgY29uZmlnKSA9PiB7XHJcbiAgaW5wdXRMaXN0LmZvckVhY2goKGlucHV0KSA9PiB7XHJcbiAgICBoaWRlSW5wdXRFcnJvcihmb3JtRWxlbWVudCwgaW5wdXQsIGNvbmZpZyk7XHJcbiAgfSk7XHJcblxyXG4gIGNvbnN0IGJ1dHRvbkVsZW1lbnQgPSBmb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKGNvbmZpZy5zdWJtaXRCdXR0b25TZWxlY3Rvcik7XHJcbiAgZGlzYWJsZUJ1dHRvbihidXR0b25FbGVtZW50LCBjb25maWcpOyAvLyBEaXNhYmxlIHRoZSBidXR0b24gZHVyaW5nIHJlc2V0XHJcbn07XHJcblxyXG4vLyBBZGQgZXZlbnQgbGlzdGVuZXJzIHRvIHRoZSBmb3JtXHJcbmNvbnN0IHNldEV2ZW50TGlzdGVuZXJzID0gKGZvcm1FbGVtZW50LCBjb25maWcpID0+IHtcclxuICBjb25zdCBpbnB1dExpc3QgPSBBcnJheS5mcm9tKFxyXG4gICAgZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbChjb25maWcuaW5wdXRTZWxlY3RvcilcclxuICApO1xyXG4gIGNvbnN0IGJ1dHRvbkVsZW1lbnQgPSBmb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKGNvbmZpZy5zdWJtaXRCdXR0b25TZWxlY3Rvcik7XHJcblxyXG4gIHRvZ2dsZUJ1dHRvblN0YXRlKGlucHV0TGlzdCwgYnV0dG9uRWxlbWVudCwgY29uZmlnKTsgLy8gSW5pdGlhbCBidXR0b24gc3RhdGUgY2hlY2tcclxuXHJcbiAgaW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xyXG4gICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoKSA9PiB7XHJcbiAgICAgIGNoZWNrSW5wdXRWYWxpZGl0eShmb3JtRWxlbWVudCwgaW5wdXRFbGVtZW50LCBjb25maWcpO1xyXG4gICAgICB0b2dnbGVCdXR0b25TdGF0ZShpbnB1dExpc3QsIGJ1dHRvbkVsZW1lbnQsIGNvbmZpZyk7IC8vIFVwZGF0ZSBidXR0b24gc3RhdGUgb24gaW5wdXRcclxuICAgIH0pO1xyXG4gIH0pO1xyXG59O1xyXG5cclxuLy8gRW5hYmxlIHZhbGlkYXRpb24gZm9yIGFsbCBmb3Jtc1xyXG5leHBvcnQgY29uc3QgZW5hYmxlVmFsaWRhdGlvbiA9IChjb25maWcpID0+IHtcclxuICBjb25zdCBmb3JtTGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoY29uZmlnLmZvcm1TZWxlY3Rvcik7XHJcblxyXG4gIGZvcm1MaXN0LmZvckVhY2goKGZvcm1FbGVtZW50KSA9PiB7XHJcbiAgICBjb25zdCBpbnB1dExpc3QgPSBBcnJheS5mcm9tKFxyXG4gICAgICBmb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKGNvbmZpZy5pbnB1dFNlbGVjdG9yKVxyXG4gICAgKTtcclxuICAgIHNldEV2ZW50TGlzdGVuZXJzKGZvcm1FbGVtZW50LCBjb25maWcpO1xyXG5cclxuICAgIC8vIENsZWFyIHZhbGlkYXRpb24gb24gZm9ybSByZXNldFxyXG4gICAgZm9ybUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInJlc2V0XCIsICgpID0+IHtcclxuICAgICAgcmVzZXRWYWxpZGF0aW9uKGZvcm1FbGVtZW50LCBpbnB1dExpc3QsIGNvbmZpZyk7XHJcbiAgICB9KTtcclxuICB9KTtcclxufTtcclxuIiwiZXhwb3J0IGZ1bmN0aW9uIHJlbmRlckxvYWRpbmcoXG4gIGlzTG9hZGluZyxcbiAgYnV0dG9uLFxuICBidXR0b25UZXh0ID0gXCJTYXZlXCIsXG4gIGxvYWRpbmdUZXh0ID0gXCJTYXZpbmcuLi5cIlxuKSB7XG4gIGlmIChpc0xvYWRpbmcpIHtcbiAgICBidXR0b24udGV4dENvbnRlbnQgPSBsb2FkaW5nVGV4dDtcbiAgfSBlbHNlIHtcbiAgICBidXR0b24udGV4dENvbnRlbnQgPSBidXR0b25UZXh0O1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBoYW5kbGVTdWJtaXQocmVxdWVzdCwgZXZ0LCBsb2FkaW5nVGV4dCA9IFwiU2F2aW5nLi4uXCIpIHtcbiAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gIGNvbnN0IHN1Ym1pdEJ1dHRvbiA9IGV2dC5zdWJtaXR0ZXI7XG4gIGNvbnN0IGluaXRpYWxUZXh0ID0gc3VibWl0QnV0dG9uLnRleHRDb250ZW50O1xuXG4gIHJlbmRlckxvYWRpbmcodHJ1ZSwgc3VibWl0QnV0dG9uLCBpbml0aWFsVGV4dCwgbG9hZGluZ1RleHQpO1xuXG4gIHJldHVybiByZXF1ZXN0KClcbiAgICAuY2F0Y2goY29uc29sZS5lcnJvcilcbiAgICAuZmluYWxseSgoKSA9PiB7XG4gICAgICByZW5kZXJMb2FkaW5nKGZhbHNlLCBzdWJtaXRCdXR0b24sIGluaXRpYWxUZXh0KTtcbiAgICB9KTtcbn1cbiIsImltcG9ydCBcIi4vaW5kZXguY3NzXCI7IC8vIEltcG9ydGluZyB0aGUgQ1NTIGZpbGVcclxuaW1wb3J0IHtcclxuICBlbmFibGVWYWxpZGF0aW9uLFxyXG4gIHNldHRpbmdzLFxyXG4gIHJlc2V0VmFsaWRhdGlvbixcclxufSBmcm9tIFwiLi4vc2NyaXB0cy92YWxpZGF0aW9uLmpzXCI7IC8vIEltcG9ydGluZyB2YWxpZGF0aW9uIGZ1bmN0aW9uc1xyXG5pbXBvcnQgQXBpIGZyb20gXCIuLi91dGlscy9BcGkuanNcIjsgLy8gSW1wb3J0aW5nIHRoZSBBUEkgY2xhc3NcclxuaW1wb3J0IHsgaGFuZGxlU3VibWl0LCByZW5kZXJMb2FkaW5nIH0gZnJvbSBcIi4uL3V0aWxzL3V0aWxzLmpzXCI7IC8vIEltcG9ydGluZyB1dGlsaXR5IGZ1bmN0aW9uc1xyXG5cclxuLy8gSW1wb3J0aW5nIGltYWdlcyBhbmQgb3RoZXIgYXNzZXRzXHJcbmltcG9ydCBsb2dvUGF0aCBmcm9tIFwiLi4vaW1hZ2VzL2xvZ28uc3ZnXCI7XHJcbmltcG9ydCBhdmF0YXJQYXRoIGZyb20gXCIuLi9pbWFnZXMvYXZhdGFyLmpwZ1wiO1xyXG5pbXBvcnQgZWRpdEJ1dHRvblBhdGggZnJvbSBcIi4uL2ltYWdlcy9lZGl0YnRuLnN2Z1wiO1xyXG5pbXBvcnQgYWRkQnV0dG9uUGF0aCBmcm9tIFwiLi4vaW1hZ2VzL2FkZGJ0bi5zdmdcIjtcclxuaW1wb3J0IGVkaXRMaWdodEJ1dHRvblBhdGggZnJvbSBcIi4uL2ltYWdlcy9lZGl0YnRuLWxpZ2h0LnN2Z1wiO1xyXG5cclxuZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5oZWFkZXJfX2xvZ29cIikuc3JjID0gbG9nb1BhdGg7XHJcbmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fYXZhdGFyXCIpLnNyYyA9IGF2YXRhclBhdGg7XHJcbmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fZWRpdC1idXR0b24gaW1nXCIpLnNyYyA9IGVkaXRCdXR0b25QYXRoO1xyXG5kb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2FkZC1idXR0b24gaW1nXCIpLnNyYyA9IGFkZEJ1dHRvblBhdGg7XHJcbmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fcGVuY2lsSWNvblwiKS5zcmMgPSBlZGl0TGlnaHRCdXR0b25QYXRoO1xyXG5cclxuY29uc3QgYXBpID0gbmV3IEFwaSh7XHJcbiAgYmFzZVVybDogXCJodHRwczovL2Fyb3VuZC1hcGkuZW4udHJpcGxldGVuLXNlcnZpY2VzLmNvbS92MVwiLFxyXG4gIGhlYWRlcnM6IHtcclxuICAgIGF1dGhvcml6YXRpb246IFwiZjFmMWRiYWItOGUxNy00OGQzLWEwOTgtZDc3ZGZkNmVhM2M1XCIsXHJcbiAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcclxuICB9LFxyXG59KTtcclxuXHJcbmxldCB1c2VySWQ7XHJcblxyXG5hcGlcclxuICAuZ2V0VXNlckluZm8oKVxyXG4gIC50aGVuKCh1c2VyRGF0YSkgPT4ge1xyXG4gICAgdXNlcklkID0gdXNlckRhdGEuX2lkO1xyXG4gICAgcHJvZmlsZU5hbWUudGV4dENvbnRlbnQgPSB1c2VyRGF0YS5uYW1lO1xyXG4gICAgcHJvZmlsZURlc2NyaXB0aW9uLnRleHRDb250ZW50ID0gdXNlckRhdGEuYWJvdXQ7XHJcbiAgICBwcm9maWxlQXZhdGFyLnNyYyA9IHVzZXJEYXRhLmF2YXRhcjtcclxuICAgIHJldHVybiBhcGkuZ2V0SW5pdGlhbENhcmRzKCk7XHJcbiAgfSlcclxuICAudGhlbigoY2FyZHMpID0+IHtcclxuICAgIGNhcmRzLmZvckVhY2goKGNhcmQpID0+IHtcclxuICAgICAgY29uc3QgY2FyZEVsZW1lbnQgPSBnZXRDYXJkRWxlbWVudChjYXJkKTtcclxuICAgICAgY2FyZHNMaXN0LmFwcGVuZChjYXJkRWxlbWVudCk7XHJcbiAgICB9KTtcclxuICB9KVxyXG4gIC5jYXRjaChjb25zb2xlLmVycm9yKTtcclxuXHJcbi8vIFByb2ZpbGUgU2VsZWN0b3JzXHJcbmNvbnN0IGVkaXRNb2RhbEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fZWRpdC1idXR0b25cIik7XHJcbmNvbnN0IGNhcmRNb2RhbEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fYWRkLWJ1dHRvblwiKTtcclxuY29uc3QgcHJvZmlsZU5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX25hbWVcIik7XHJcbmNvbnN0IHByb2ZpbGVEZXNjcmlwdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fZGVzY3JpcHRpb25cIik7XHJcblxyXG4vLyBNb2RhbCBTZWxlY3RvcnNcclxuLy8gY29uc3QgbW9kYWxzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5tb2RhbFwiKTtcclxuY29uc3QgY2xvc2VCdXR0b25zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5tb2RhbF9fY2xvc2UtYnV0dG9uXCIpO1xyXG5jb25zdCBkZWxldGVNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZGVsZXRlLW1vZGFsXCIpO1xyXG5jb25zdCBkZWxldGVGb3JtID0gZGVsZXRlTW9kYWwucXVlcnlTZWxlY3RvcihcIiNkZWxldGUtZm9ybVwiKTtcclxuY29uc3QgY2FuY2VsRGVsZXRlQnV0dG9uID0gZGVsZXRlTW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fY2FuY2VsLWJ1dHRvblwiKTtcclxuY29uc3QgYXZhdGFyRWRpdEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fYXZhdGFyLWJ1dHRvblwiKTtcclxuY29uc3QgYXZhdGFyTW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI25ldy1hdmF0YXItbW9kYWxcIik7XHJcbmNvbnN0IGF2YXRhckZvcm0gPSBhdmF0YXJNb2RhbC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19mb3JtXCIpO1xyXG5jb25zdCBhdmF0YXJMaW5rSW5wdXQgPSBhdmF0YXJNb2RhbC5xdWVyeVNlbGVjdG9yKFwiI25ldy1hdmF0YXItbGluay1pbnB1dFwiKTtcclxuY29uc3QgcHJvZmlsZUF2YXRhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fYXZhdGFyXCIpO1xyXG5cclxuLy8gTW9kYWwgLSBFZGl0IFByb2ZpbGVcclxuY29uc3QgZWRpdE1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNlZGl0LW1vZGFsXCIpO1xyXG5jb25zdCBlZGl0Rm9ybSA9IGVkaXRNb2RhbC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19mb3JtXCIpO1xyXG5jb25zdCBlZGl0TW9kYWxOYW1lSW5wdXQgPSBlZGl0TW9kYWwucXVlcnlTZWxlY3RvcihcIiNwcm9maWxlLW5hbWUtaW5wdXRcIik7XHJcbmNvbnN0IGVkaXRNb2RhbERlc2NyaXB0aW9uSW5wdXQgPSBlZGl0TW9kYWwucXVlcnlTZWxlY3RvcihcclxuICBcIiNwcm9maWxlLWRlc2NyaXB0aW9uLWlucHV0XCJcclxuKTtcclxuXHJcbi8vIE1vZGFsIC0gQWRkIENhcmRcclxuY29uc3QgY2FyZE1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNuZXctY2FyZC1tb2RhbFwiKTtcclxuY29uc3QgY2FyZEZvcm0gPSBjYXJkTW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fZm9ybVwiKTtcclxuLy8gY29uc3QgY2FyZFN1Ym1pdEJ1dHRvbiA9IGNhcmRNb2RhbC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19zdWJtaXQtYnV0dG9uXCIpO1xyXG5jb25zdCBjYXJkTGlua0lucHV0ID0gY2FyZE1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIjbmV3LWNhcmQtbGluay1pbnB1dFwiKTtcclxuY29uc3QgY2FyZENhcHRpb25JbnB1dCA9IGNhcmRNb2RhbC5xdWVyeVNlbGVjdG9yKFwiI25ldy1jYXJkLWNhcHRpb24taW5wdXRcIik7XHJcblxyXG4vLyBNb2RhbCBQcmV2aWV3XHJcbmNvbnN0IHByZXZpZXdNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJldmlldy1tb2RhbFwiKTtcclxuY29uc3QgcHJldmlld0ltYWdlID0gcHJldmlld01vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2ltYWdlXCIpO1xyXG5jb25zdCBwcmV2aWV3Q2FwdGlvbiA9IHByZXZpZXdNb2RhbC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19jYXB0aW9uXCIpO1xyXG5cclxuLy8gQ2FyZHNcclxuY29uc3QgY2FyZFRlbXBsYXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNjYXJkLXRlbXBsYXRlXCIpO1xyXG5jb25zdCBjYXJkc0xpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRzX19saXN0XCIpO1xyXG5cclxuZnVuY3Rpb24gZ2V0Q2FyZEVsZW1lbnQoZGF0YSkge1xyXG4gIGNvbnN0IGNhcmRFbGVtZW50ID0gY2FyZFRlbXBsYXRlLmNvbnRlbnRcclxuICAgIC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRcIilcclxuICAgIC5jbG9uZU5vZGUodHJ1ZSk7XHJcbiAgY2FyZEVsZW1lbnQuX2lkID0gZGF0YS5faWQ7XHJcblxyXG4gIGNvbnN0IGNhcmRUaXRsZSA9IGNhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fdGl0bGVcIik7XHJcbiAgY29uc3QgY2FyZEltYWdlID0gY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19pbWFnZVwiKTtcclxuICBjb25zdCBjYXJkTGlrZUJ1dHRvbiA9IGNhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fbGlrZS1idXR0b25cIik7XHJcbiAgY29uc3QgY2FyZExpa2VDb3VudCA9IGNhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fbGlrZS1jb3VudFwiKTtcclxuICBjb25zdCBjYXJkRGVsZXRlQnV0dG9uID0gY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19kZWxldGUtYnV0dG9uXCIpO1xyXG5cclxuICAvLyBTZXQgY2FyZCBkYXRhXHJcbiAgY2FyZFRpdGxlLnRleHRDb250ZW50ID0gZGF0YS5uYW1lO1xyXG4gIGNhcmRJbWFnZS5zcmMgPSBkYXRhLmxpbms7IC8vIE1ha2Ugc3VyZSB0aGlzIGxpbmUgaXMgcHJlc2VudFxyXG4gIGNhcmRJbWFnZS5hbHQgPSBkYXRhLm5hbWU7XHJcblxyXG4gIC8vIFNldCBpbml0aWFsIGxpa2Ugc3RhdGUgYW5kIGNvdW50XHJcbiAgaWYgKGRhdGEuaXNMaWtlZCkge1xyXG4gICAgY2FyZExpa2VCdXR0b24uY2xhc3NMaXN0LmFkZChcImNhcmRfX2xpa2UtYnV0dG9uX2xpa2VkXCIpO1xyXG4gICAgY2FyZExpa2VDb3VudC50ZXh0Q29udGVudCA9IFwiMVwiOyAvLyBTZXQgdG8gMSBpZiB0aGUgY2FyZCBpcyBsaWtlZFxyXG4gIH0gZWxzZSB7XHJcbiAgICBjYXJkTGlrZUNvdW50LnRleHRDb250ZW50ID0gXCIwXCI7IC8vIFNldCB0byAwIGlmIHRoZSBjYXJkIGlzIG5vdCBsaWtlZFxyXG4gIH1cclxuXHJcbiAgY2FyZExpa2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgIGNvbnN0IGlzQ3VycmVudGx5TGlrZWQgPSBjYXJkTGlrZUJ1dHRvbi5jbGFzc0xpc3QuY29udGFpbnMoXHJcbiAgICAgIFwiY2FyZF9fbGlrZS1idXR0b25fbGlrZWRcIlxyXG4gICAgKTtcclxuXHJcbiAgICBjb25zdCBsaWtlQ2FyZFByb21pc2UgPSBpc0N1cnJlbnRseUxpa2VkXHJcbiAgICAgID8gYXBpLmRpc2xpa2VDYXJkKGRhdGEuX2lkKVxyXG4gICAgICA6IGFwaS5saWtlQ2FyZChkYXRhLl9pZCk7XHJcblxyXG4gICAgbGlrZUNhcmRQcm9taXNlXHJcbiAgICAgIC50aGVuKCh1cGRhdGVkQ2FyZCkgPT4ge1xyXG4gICAgICAgIGNhcmRMaWtlQnV0dG9uLmNsYXNzTGlzdC50b2dnbGUoXHJcbiAgICAgICAgICBcImNhcmRfX2xpa2UtYnV0dG9uX2xpa2VkXCIsXHJcbiAgICAgICAgICB1cGRhdGVkQ2FyZC5pc0xpa2VkXHJcbiAgICAgICAgKTtcclxuICAgICAgICBjYXJkTGlrZUNvdW50LnRleHRDb250ZW50ID0gdXBkYXRlZENhcmQuaXNMaWtlZCA/IFwiMVwiIDogXCIwXCI7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgdXBkYXRpbmcgbGlrZSBzdGF0dXM6XCIsIGVycm9yKTtcclxuICAgICAgfSk7XHJcbiAgfSk7XHJcblxyXG4gIC8vIGRlbGV0ZSBhbmQgcHJldmlldyBldmVudCBsaXN0ZW5lcnNcclxuICBjYXJkRGVsZXRlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICBvcGVuTW9kYWwoZGVsZXRlTW9kYWwpO1xyXG4gICAgZGVsZXRlRm9ybS5fY2FyZFRvRGVsZXRlID0gY2FyZEVsZW1lbnQ7XHJcbiAgfSk7XHJcblxyXG4gIGNhcmRJbWFnZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgb3Blbk1vZGFsKHByZXZpZXdNb2RhbCk7XHJcbiAgICBwcmV2aWV3Q2FwdGlvbi50ZXh0Q29udGVudCA9IGRhdGEubmFtZTtcclxuICAgIHByZXZpZXdJbWFnZS5hbHQgPSBkYXRhLm5hbWU7XHJcbiAgICBwcmV2aWV3SW1hZ2Uuc3JjID0gZGF0YS5saW5rO1xyXG4gIH0pO1xyXG5cclxuICByZXR1cm4gY2FyZEVsZW1lbnQ7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIG9wZW5Nb2RhbChtb2RhbCkge1xyXG4gIG1vZGFsLmNsYXNzTGlzdC5hZGQoXCJtb2RhbF9vcGVuZWRcIik7XHJcblxyXG4gIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBoYW5kbGVPdmVybGF5Q2xpY2spO1xyXG4gIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIGhhbmRsZUVzY2FwZUtleVByZXNzKTtcclxuXHJcbiAgbW9kYWwuX2hhbmRsZU92ZXJsYXlDbGljayA9IGhhbmRsZU92ZXJsYXlDbGljaztcclxuICBtb2RhbC5faGFuZGxlRXNjYXBlS2V5UHJlc3MgPSBoYW5kbGVFc2NhcGVLZXlQcmVzcztcclxuXHJcbiAgZnVuY3Rpb24gaGFuZGxlT3ZlcmxheUNsaWNrKGV2ZW50KSB7XHJcbiAgICBpZiAoZXZlbnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcIm1vZGFsX29wZW5lZFwiKSkge1xyXG4gICAgICBjbG9zZU1vZGFsKG1vZGFsKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGhhbmRsZUVzY2FwZUtleVByZXNzKGV2ZW50KSB7XHJcbiAgICBpZiAoZXZlbnQua2V5ID09PSBcIkVzY2FwZVwiKSB7XHJcbiAgICAgIGNsb3NlTW9kYWwobW9kYWwpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuZnVuY3Rpb24gY2xvc2VNb2RhbChtb2RhbCkge1xyXG4gIG1vZGFsLmNsYXNzTGlzdC5yZW1vdmUoXCJtb2RhbF9vcGVuZWRcIik7XHJcblxyXG4gIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBtb2RhbC5faGFuZGxlT3ZlcmxheUNsaWNrKTtcclxuICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCBtb2RhbC5faGFuZGxlRXNjYXBlS2V5UHJlc3MpO1xyXG59XHJcblxyXG4vLyBmdW5jdGlvbiByZW5kZXJMb2FkaW5nKFxyXG4vLyBpc0xvYWRpbmcsXHJcbi8vIGJ1dHRvbixcclxuLy8gYnV0dG9uVGV4dCA9IFwiU2F2ZVwiLFxyXG4vLyBsb2FkaW5nVGV4dCA9IFwiU2F2aW5nLi4uXCJcclxuLy8gKSB7XHJcbi8vIGJ1dHRvbi50ZXh0Q29udGVudCA9IGlzTG9hZGluZyA/IGxvYWRpbmdUZXh0IDogYnV0dG9uVGV4dDtcclxuLy8gfVxyXG5cclxuLy8gVW5pdmVyc2FsIENsb3NlIEJ1dHRvbiBIYW5kbGVyXHJcbmNsb3NlQnV0dG9ucy5mb3JFYWNoKChidXR0b24pID0+IHtcclxuICBjb25zdCBtb2RhbCA9IGJ1dHRvbi5jbG9zZXN0KFwiLm1vZGFsXCIpO1xyXG4gIGJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4gY2xvc2VNb2RhbChtb2RhbCkpO1xyXG59KTtcclxuXHJcbi8vIEhhbmRsZXJzXHJcbmZ1bmN0aW9uIG1ha2VFZGl0UHJvZmlsZVJlcXVlc3QoKSB7XHJcbiAgLy8gR2V0IGZvcm0gdmFsdWVzXHJcbiAgY29uc3QgbmFtZSA9IGVkaXRNb2RhbE5hbWVJbnB1dC52YWx1ZTtcclxuICBjb25zdCBhYm91dCA9IGVkaXRNb2RhbERlc2NyaXB0aW9uSW5wdXQudmFsdWU7XHJcblxyXG4gIC8vIE1ha2UgQVBJIGNhbGwgdG8gZWRpdCB1c2VyIGluZm9cclxuICByZXR1cm4gYXBpLmVkaXRVc2VySW5mbyh7IG5hbWUsIGFib3V0IH0pLnRoZW4oKHVzZXJEYXRhKSA9PiB7XHJcbiAgICAvLyBVcGRhdGUgdGhlIERPTSB3aXRoIHRoZSBuZXcgdXNlciBkYXRhXHJcbiAgICBwcm9maWxlTmFtZS50ZXh0Q29udGVudCA9IHVzZXJEYXRhLm5hbWU7XHJcbiAgICBwcm9maWxlRGVzY3JpcHRpb24udGV4dENvbnRlbnQgPSB1c2VyRGF0YS5hYm91dDtcclxuICAgIC8vIENsb3NlIHRoZSBtb2RhbFxyXG4gICAgY2xvc2VNb2RhbChlZGl0TW9kYWwpO1xyXG4gIH0pO1xyXG59XHJcblxyXG5mdW5jdGlvbiBoYW5kbGVFZGl0Rm9ybVN1Ym1pdChldnQpIHtcclxuICBoYW5kbGVTdWJtaXQobWFrZUVkaXRQcm9maWxlUmVxdWVzdCwgZXZ0LCBcIlNhdmluZy4uLlwiKTtcclxufVxyXG5cclxuZnVuY3Rpb24gaGFuZGxlQ2FyZEZvcm1TdWJtaXQoZXZ0KSB7XHJcbiAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgY29uc3Qgc3VibWl0QnV0dG9uID0gY2FyZEZvcm0ucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fc3VibWl0LWJ1dHRvblwiKTtcclxuICByZW5kZXJMb2FkaW5nKHRydWUsIHN1Ym1pdEJ1dHRvbik7XHJcblxyXG4gIGFwaVxyXG4gICAgLmFkZENhcmQoe1xyXG4gICAgICBuYW1lOiBjYXJkQ2FwdGlvbklucHV0LnZhbHVlLFxyXG4gICAgICBsaW5rOiBjYXJkTGlua0lucHV0LnZhbHVlLFxyXG4gICAgfSlcclxuICAgIC50aGVuKChjYXJkRGF0YSkgPT4ge1xyXG4gICAgICBjb25zdCBjYXJkRWxlbWVudCA9IGdldENhcmRFbGVtZW50KGNhcmREYXRhKTtcclxuICAgICAgY2FyZHNMaXN0LnByZXBlbmQoY2FyZEVsZW1lbnQpO1xyXG4gICAgICBldnQudGFyZ2V0LnJlc2V0KCk7XHJcbiAgICAgIGNsb3NlTW9kYWwoY2FyZE1vZGFsKTtcclxuICAgIH0pXHJcbiAgICAuY2F0Y2goY29uc29sZS5lcnJvcilcclxuICAgIC5maW5hbGx5KCgpID0+IHtcclxuICAgICAgcmVuZGVyTG9hZGluZyhmYWxzZSwgc3VibWl0QnV0dG9uKTtcclxuICAgIH0pO1xyXG59XHJcblxyXG4vLyBFZGl0IE1vZGFsIExpc3RlbmVyc1xyXG5lZGl0TW9kYWxCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICBlZGl0TW9kYWxOYW1lSW5wdXQudmFsdWUgPSBwcm9maWxlTmFtZS50ZXh0Q29udGVudDtcclxuICBlZGl0TW9kYWxEZXNjcmlwdGlvbklucHV0LnZhbHVlID0gcHJvZmlsZURlc2NyaXB0aW9uLnRleHRDb250ZW50O1xyXG4gIHJlc2V0VmFsaWRhdGlvbihcclxuICAgIGVkaXRGb3JtLFxyXG4gICAgW2VkaXRNb2RhbE5hbWVJbnB1dCwgZWRpdE1vZGFsRGVzY3JpcHRpb25JbnB1dF0sXHJcbiAgICBzZXR0aW5nc1xyXG4gICk7XHJcbiAgb3Blbk1vZGFsKGVkaXRNb2RhbCk7XHJcbn0pO1xyXG5cclxuLy8gQXZhdGFyIE1vZGFsIExpc3RlbmVyXHJcbmF2YXRhckVkaXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICBvcGVuTW9kYWwoYXZhdGFyTW9kYWwpO1xyXG59KTtcclxuXHJcbi8vIENhcmQgTW9kYWwgTGlzdGVuZXJzXHJcbmNhcmRNb2RhbEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gIG9wZW5Nb2RhbChjYXJkTW9kYWwpO1xyXG59KTtcclxuXHJcbmNhbmNlbERlbGV0ZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gIGNsb3NlTW9kYWwoZGVsZXRlTW9kYWwpO1xyXG59KTtcclxuXHJcbi8vIEZvcm0gTGlzdGVuZXJzXHJcbmVkaXRGb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgaGFuZGxlRWRpdEZvcm1TdWJtaXQpO1xyXG5jYXJkRm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIGhhbmRsZUNhcmRGb3JtU3VibWl0KTtcclxuXHJcbmRlbGV0ZUZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZXZ0KSA9PiB7XHJcbiAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgY29uc3Qgc3VibWl0QnV0dG9uID0gZGVsZXRlRm9ybS5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19zdWJtaXQtYnV0dG9uXCIpO1xyXG4gIHJlbmRlckxvYWRpbmcodHJ1ZSwgc3VibWl0QnV0dG9uLCBcIkRlbGV0ZVwiLCBcIkRlbGV0aW5nLi4uXCIpO1xyXG5cclxuICBhcGlcclxuICAgIC5yZW1vdmVDYXJkKGRlbGV0ZUZvcm0uX2NhcmRUb0RlbGV0ZS5faWQpIC8vIENoYW5nZWQgZnJvbSBkZWxldGVDYXJkIHRvIHJlbW92ZUNhcmRcclxuICAgIC50aGVuKCgpID0+IHtcclxuICAgICAgaGFuZGxlU3VibWl0KCgpID0+IHtcclxuICAgICAgICBkZWxldGVGb3JtLl9jYXJkVG9EZWxldGUucmVtb3ZlKCk7XHJcbiAgICAgIH0pO1xyXG4gICAgICBjbG9zZU1vZGFsKGRlbGV0ZU1vZGFsKTtcclxuICAgIH0pXHJcbiAgICAuY2F0Y2goY29uc29sZS5lcnJvcilcclxuICAgIC5maW5hbGx5KCgpID0+IHtcclxuICAgICAgcmVuZGVyTG9hZGluZyhmYWxzZSwgc3VibWl0QnV0dG9uLCBcIkRlbGV0ZVwiKTtcclxuICAgIH0pO1xyXG59KTtcclxuXHJcbi8vIEF2YXRhciBGb3JtIFN1Ym1pdCBIYW5kbGVyXHJcbmF2YXRhckZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZXZ0KSA9PiB7XHJcbiAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgY29uc3Qgc3VibWl0QnV0dG9uID0gYXZhdGFyRm9ybS5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19zdWJtaXQtYnV0dG9uXCIpO1xyXG4gIHJlbmRlckxvYWRpbmcodHJ1ZSwgc3VibWl0QnV0dG9uKTtcclxuXHJcbiAgYXBpXHJcbiAgICAudXBkYXRlQXZhdGFyKHtcclxuICAgICAgYXZhdGFyOiBhdmF0YXJMaW5rSW5wdXQudmFsdWUsXHJcbiAgICB9KVxyXG4gICAgLnRoZW4oKHVzZXJEYXRhKSA9PiB7XHJcbiAgICAgIHByb2ZpbGVBdmF0YXIuc3JjID0gdXNlckRhdGEuYXZhdGFyO1xyXG4gICAgICBldnQudGFyZ2V0LnJlc2V0KCk7XHJcbiAgICAgIGNsb3NlTW9kYWwoYXZhdGFyTW9kYWwpO1xyXG4gICAgfSlcclxuICAgIC5jYXRjaChjb25zb2xlLmVycm9yKVxyXG4gICAgLmZpbmFsbHkoKCkgPT4ge1xyXG4gICAgICByZW5kZXJMb2FkaW5nKGZhbHNlLCBzdWJtaXRCdXR0b24pO1xyXG4gICAgfSk7XHJcbn0pO1xyXG5cclxuZW5hYmxlVmFsaWRhdGlvbihzZXR0aW5ncyk7XHJcbiIsImNsYXNzIEFwaSB7XHJcbiAgY29uc3RydWN0b3Iob3B0aW9ucykge1xyXG4gICAgdGhpcy5fYmFzZVVybCA9IG9wdGlvbnMuYmFzZVVybDtcclxuICAgIHRoaXMuX2hlYWRlcnMgPSBvcHRpb25zLmhlYWRlcnM7XHJcbiAgfVxyXG5cclxuICBfY2hlY2tSZXNwb25zZShyZXMpIHtcclxuICAgIGlmIChyZXMub2spIHtcclxuICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9YCk7XHJcbiAgfVxyXG5cclxuICBfcmVxdWVzdChlbmRwb2ludCwgb3B0aW9ucyA9IHt9KSB7XHJcbiAgICBjb25zdCBmaW5hbE9wdGlvbnMgPSB7XHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgIC4uLm9wdGlvbnMsXHJcbiAgICB9O1xyXG4gICAgY29uc3QgdXJsID0gYCR7dGhpcy5fYmFzZVVybH0ke2VuZHBvaW50fWA7XHJcbiAgICByZXR1cm4gZmV0Y2godXJsLCBmaW5hbE9wdGlvbnMpLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSk7XHJcbiAgfVxyXG5cclxuICBnZXRVc2VySW5mbygpIHtcclxuICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KFwiL3VzZXJzL21lXCIpO1xyXG4gIH1cclxuXHJcbiAgZ2V0SW5pdGlhbENhcmRzKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoXCIvY2FyZHNcIiwge1xyXG4gICAgICBtZXRob2Q6IFwiR0VUXCIsXHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIC8vIFBBVENIIC91c2Vycy9tZVxyXG4gIGVkaXRVc2VySW5mbyh7IG5hbWUsIGFib3V0IH0pIHtcclxuICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KFwiL3VzZXJzL21lXCIsIHtcclxuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgbmFtZSwgYWJvdXQgfSksXHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIC8vIFBBVENIIC91c2Vycy9tZS9hdmF0YXJcclxuICB1cGRhdGVBdmF0YXIoeyBhdmF0YXIgfSkge1xyXG4gICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoXCIvdXNlcnMvbWUvYXZhdGFyXCIsIHtcclxuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgYXZhdGFyIH0pLFxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICAvLyBQT1NUIC9jYXJkc1xyXG4gIGFkZENhcmQoeyBuYW1lLCBsaW5rIH0pIHtcclxuICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KFwiL2NhcmRzXCIsIHtcclxuICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoeyBuYW1lLCBsaW5rIH0pLFxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICAvLyBERUxFVEUgL2NhcmRzLzpjYXJkSWRcclxuICByZW1vdmVDYXJkKGNhcmRJZCkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzLyR7Y2FyZElkfWAsIHtcclxuICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcclxuICB9XHJcblxyXG4gIC8vIFBVVCAvY2FyZHMvOmNhcmRJZC9saWtlc1xyXG4gIGxpa2VDYXJkKGNhcmRJZCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoYC9jYXJkcy8ke2NhcmRJZH0vbGlrZXNgLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQVVRcIixcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgLy8gREVMRVRFIC9jYXJkcy86Y2FyZElkL2xpa2VzXHJcbiAgZGlzbGlrZUNhcmQoY2FyZElkKSB7XHJcbiAgICByZXR1cm4gdGhpcy5fcmVxdWVzdChgL2NhcmRzLyR7Y2FyZElkfS9saWtlc2AsIHtcclxuICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICAvLyBIZWxwZXI6IEZldGNoIGluaXRpYWwgZGF0YSBzaW11bHRhbmVvdXNseSAodXNlciBpbmZvICYgY2FyZHMpXHJcbiAgZmV0Y2hJbml0aWFsRGF0YSgpIHtcclxuICAgIHJldHVybiBQcm9taXNlLmFsbChbdGhpcy5nZXRVc2VySW5mbygpLCB0aGlzLmdldEluaXRpYWxDYXJkcygpXSk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBBcGk7XHJcbiJdLCJuYW1lcyI6WyJfX3dlYnBhY2tfcmVxdWlyZV9fIiwic2V0dGluZ3MiLCJmb3JtU2VsZWN0b3IiLCJpbnB1dFNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiZXJyb3JDbGFzcyIsImxvZ0Vycm9yIiwibWVzc2FnZSIsImNvbnNvbGUiLCJlcnJvciIsImhpZGVJbnB1dEVycm9yIiwiZm9ybUVsZW1lbnQiLCJpbnB1dEVsZW1lbnQiLCJjb25maWciLCJlcnJvck1lc3NhZ2VFbGVtZW50IiwicXVlcnlTZWxlY3RvciIsImlkIiwidGV4dENvbnRlbnQiLCJyZW1vdmVBdHRyaWJ1dGUiLCJjbGFzc0xpc3QiLCJyZW1vdmUiLCJ0b2dnbGVCdXR0b25TdGF0ZSIsImlucHV0TGlzdCIsImJ1dHRvbkVsZW1lbnQiLCJzb21lIiwiaW5wdXQiLCJ2YWxpZGl0eSIsInZhbGlkIiwiaGFzSW52YWxpZElucHV0IiwiZGlzYWJsZUJ1dHRvbiIsImRpc2FibGVkIiwiYWRkIiwicmVzZXRWYWxpZGF0aW9uIiwiZm9yRWFjaCIsInJlbmRlckxvYWRpbmciLCJpc0xvYWRpbmciLCJidXR0b24iLCJidXR0b25UZXh0IiwiYXJndW1lbnRzIiwibGVuZ3RoIiwidW5kZWZpbmVkIiwibG9hZGluZ1RleHQiLCJoYW5kbGVTdWJtaXQiLCJyZXF1ZXN0IiwiZXZ0IiwicHJldmVudERlZmF1bHQiLCJzdWJtaXRCdXR0b24iLCJzdWJtaXR0ZXIiLCJpbml0aWFsVGV4dCIsImNhdGNoIiwiZmluYWxseSIsImRvY3VtZW50Iiwic3JjIiwibG9nb1BhdGgiLCJhdmF0YXJQYXRoIiwiZWRpdEJ1dHRvblBhdGgiLCJhZGRCdXR0b25QYXRoIiwiZWRpdExpZ2h0QnV0dG9uUGF0aCIsImFwaSIsImNvbnN0cnVjdG9yIiwib3B0aW9ucyIsInRoaXMiLCJfYmFzZVVybCIsImJhc2VVcmwiLCJfaGVhZGVycyIsImhlYWRlcnMiLCJfY2hlY2tSZXNwb25zZSIsInJlcyIsIm9rIiwianNvbiIsIlByb21pc2UiLCJyZWplY3QiLCJzdGF0dXMiLCJfcmVxdWVzdCIsImVuZHBvaW50IiwiZmluYWxPcHRpb25zIiwidXJsIiwiZmV0Y2giLCJ0aGVuIiwiZ2V0VXNlckluZm8iLCJnZXRJbml0aWFsQ2FyZHMiLCJtZXRob2QiLCJlZGl0VXNlckluZm8iLCJfcmVmIiwibmFtZSIsImFib3V0IiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJ1cGRhdGVBdmF0YXIiLCJfcmVmMiIsImF2YXRhciIsImFkZENhcmQiLCJfcmVmMyIsImxpbmsiLCJyZW1vdmVDYXJkIiwiY2FyZElkIiwibGlrZUNhcmQiLCJkaXNsaWtlQ2FyZCIsImZldGNoSW5pdGlhbERhdGEiLCJhbGwiLCJhdXRob3JpemF0aW9uIiwidXNlcklkIiwidXNlckRhdGEiLCJfaWQiLCJwcm9maWxlTmFtZSIsInByb2ZpbGVEZXNjcmlwdGlvbiIsInByb2ZpbGVBdmF0YXIiLCJjYXJkcyIsImNhcmQiLCJjYXJkRWxlbWVudCIsImdldENhcmRFbGVtZW50IiwiY2FyZHNMaXN0IiwiYXBwZW5kIiwiZWRpdE1vZGFsQnV0dG9uIiwiY2FyZE1vZGFsQnV0dG9uIiwiY2xvc2VCdXR0b25zIiwicXVlcnlTZWxlY3RvckFsbCIsImRlbGV0ZU1vZGFsIiwiZGVsZXRlRm9ybSIsImNhbmNlbERlbGV0ZUJ1dHRvbiIsImF2YXRhckVkaXRCdXR0b24iLCJhdmF0YXJNb2RhbCIsImF2YXRhckZvcm0iLCJhdmF0YXJMaW5rSW5wdXQiLCJlZGl0TW9kYWwiLCJlZGl0Rm9ybSIsImVkaXRNb2RhbE5hbWVJbnB1dCIsImVkaXRNb2RhbERlc2NyaXB0aW9uSW5wdXQiLCJjYXJkTW9kYWwiLCJjYXJkRm9ybSIsImNhcmRMaW5rSW5wdXQiLCJjYXJkQ2FwdGlvbklucHV0IiwicHJldmlld01vZGFsIiwicHJldmlld0ltYWdlIiwicHJldmlld0NhcHRpb24iLCJjYXJkVGVtcGxhdGUiLCJkYXRhIiwiY29udGVudCIsImNsb25lTm9kZSIsImNhcmRUaXRsZSIsImNhcmRJbWFnZSIsImNhcmRMaWtlQnV0dG9uIiwiY2FyZExpa2VDb3VudCIsImNhcmREZWxldGVCdXR0b24iLCJhbHQiLCJpc0xpa2VkIiwiYWRkRXZlbnRMaXN0ZW5lciIsImNvbnRhaW5zIiwidXBkYXRlZENhcmQiLCJ0b2dnbGUiLCJvcGVuTW9kYWwiLCJfY2FyZFRvRGVsZXRlIiwibW9kYWwiLCJoYW5kbGVPdmVybGF5Q2xpY2siLCJldmVudCIsInRhcmdldCIsImNsb3NlTW9kYWwiLCJoYW5kbGVFc2NhcGVLZXlQcmVzcyIsImtleSIsIl9oYW5kbGVPdmVybGF5Q2xpY2siLCJfaGFuZGxlRXNjYXBlS2V5UHJlc3MiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwibWFrZUVkaXRQcm9maWxlUmVxdWVzdCIsInZhbHVlIiwiY2xvc2VzdCIsImNhcmREYXRhIiwicHJlcGVuZCIsInJlc2V0IiwiQXJyYXkiLCJmcm9tIiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJjaGVja0lucHV0VmFsaWRpdHkiLCJzaG93SW5wdXRFcnJvciIsImVycm9yTWVzc2FnZSIsInNldEF0dHJpYnV0ZSIsInZhbGlkYXRpb25NZXNzYWdlIl0sInNvdXJjZVJvb3QiOiIifQ==